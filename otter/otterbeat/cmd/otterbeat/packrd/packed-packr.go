// +build !skippackr
// Code generated by github.com/gobuffalo/packr/v2. DO NOT EDIT.

// You can use the "packr2 clean" command to clean up this,
// and any other packr generated files.
package packrd

import (
	"github.com/gobuffalo/packr/v2"
	"github.com/gobuffalo/packr/v2/file/resolver"
)

var _ = func() error {
	const gk = "bec772a2de67b2b07ed105e69c5d1f04"
	g := packr.New(gk, "")
	hgr, err := resolver.NewHexGzip(map[string]string{
		"5fe78e2103cf0ae04d31d8301a2effb6": "1f8b08000000000000ff4c8c4d4b03311040eff919f90149a615c540a8a097852245118f92a6b3666076b224e3c7cf97050fbdbccb7bbca7d7e7647b6b1a373c702b996b1b1af77b00df54b15b73a21599048f34f4ede5986c555da3f7b0bb73c1050771771fc0afffd907d350577539949a4590a74b026b2699f9ebf7bd93e2f5e4ecc815891002dcf89fcd1e2ee7b4a0762ac39a5327d1c726337da639f340338962ffce9cec6d18d6fc050000ffff59a8e10ac2000000",
		"d137f5c49398da7e2a27d8ecb3d51c96": "1f8b08000000000000ffac554f6f1b451cbdcfa7f879bc4a63c06b2737401ba9a8548a54a108ca01a5a61a7b67ed91c733a3d9592768bd0821240e54c0a194080a1c10552f513855ad52892f13bbbdf52ba099593b5edb4142ad0fb634bf7feff7de1b4fbdd6ea32d1ea927480103d56521b38d8bf71f7e6fead0fa331d12dc562341ac64c4353c1986884ea2935d03c863aed0d244881148b6f324ea3209f5716882815e579f801131f91112d0a844652d3ebba9f4638c8df7a6fb7c0082599e8192605f406b437bcab58bcdd801c01d441b178f6e0db8bf327d3d393e9c3c72f7ef9e6e5d96faf9edfbb38ff7e11ba787afaf2ec7cfac3038b118025707808cd0482bc445440a7f33e980115080080cb1ee1b673146cf78859ca6bb8781da68fbe9efdfe50b1d84f7df5fcdef4d9938ba7f7672767b39ffe9e9efebcc031fbf3abd91f7fcdee3f532cb687fffcfae2f177b393b3e98f8f7cadebe821b93905445fc2e787ede6bb9db703e874606bcbc5b6556a99c53e094fa0afa982e618f0c1fe0db87dfb330c1338ea419337a0d937d0aeee643f4e877983c5a9a626d30276dc41c290fb72dc6a3a92630a4ad3841d43d8420b6a324daf2b65158b829c2855c7610b17a84a9d054c132891e23bdd205f2a2cee74315c6ee17e27408e86702d579a0903c16e71ade1808cc890429a690a66408c6d0f2c0502221b75a90ed17f12b844428500d8bbd4753d8a56a8f19cf894b68d96b1362a96fc991aa24de9cd8a8be6be6dac62dd20951bd2148003a21408796497d599104cf481704d49fcc53bbeb162f11548851c640a9c3805f80b662f55514090cf6f58017bd08ae9b82532ce61776f6b07b61040ca2955ae5589b4b45e5083ffeb3ab74a50bb8a6abb9fa38cc66118963bd52a1bb52deb3ca5ab6509619cc660a46f106ea26159194db924f1eb4a33649c43f3d34f3ede5d368abb3497acf9ee821e1dac0f987bccc952cec9544c8cdf25c87d5981576c25d51b815e75f7a8fa2738df6413468b40399556911193a56fc4f1f389a521aa0e5fb5c03cd5a1aae175bd0d61fc96ec57907549146c77494a0519d1f26e3416512efb897d9db07dcdb8eca7ad20ef9222e4b26ffbdb86962f1c94898e08bf190e76304411600b082fef660f10e56b69449b953ca2cd7aa2a69b52a5aaf8edca5aebf84aa93fda88c764e92a2093a5eba996864a6249342a152af5697b54130b76526e31f1e327bef5c475420943ff060000ffff88d528c35b080000",
	})
	if err != nil {
		panic(err)
	}
	g.DefaultResolver = hgr

	func() {
		b := packr.New("myBox", "assets")
		b.SetResolver("cnf.tpl.toml", packr.Pointer{ForwardBox: gk, ForwardPath: "5fe78e2103cf0ae04d31d8301a2effb6"})
		b.SetResolver("ctl.tpl.sh", packr.Pointer{ForwardBox: gk, ForwardPath: "d137f5c49398da7e2a27d8ecb3d51c96"})
	}()
	return nil
}()
